// 백준 11726번 문제

#include <iostream>

using namespace std;

long long arr[1001];

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;

	arr[1] = 1;
	arr[2] = 2;
	for (int i = 3; i <= n; i++) arr[i] = (arr[i - 1] + arr[i - 2]) % 10007;
		// 계산 중간에 %연산을 안하면 overflow가 나온다고함...
		// long long으로 선언했는데 왜...??
		// n을 작게넣어봐도 생각보다 큰 값이 나옴 ㅋㅋㅋ

	cout << arr[n];
}

// 순서바꿔서 배치하는 경우를 깜빡함ㅋㅋ;
//
// 어떤식으로 배열을 정의해야 할지 모르겠음
// 테이블 정의에 좀 더 신경쓸것...
// arr[i]에서 이전 i의 결과값을 포함하는 경우를 최대한 생각해보기
//
// 이 문제같은경우는 D[i] = 2 x i 크기의 직사각형을 채우는 방법의 수로 정의됨
// 2 x 1 타일과 1 x 2 타일을 깔았을때 남은 칸을 구하는 배열의 인자값을 생각해보면
// 2 x 1 -> D[n - 1] 세로는 딱 맞아떨어지니 갯수에 비례함
// 1 x 2 -> D[n - 2] 가로는 딱 맞아떨이지지 않으니 두개를 무조건 써야함
// 두칸을 잡아먹으니 - 2 가 됨
// 즉 더해서 D[n] = D[n - 1] + D[n - 2] 가로타일의 방법과 세로타일의 방법을 가산